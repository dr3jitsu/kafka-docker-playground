all:
  vars:
    ansible_connection: docker
    ansible_user: root
    ansible_become: true
    ansible_python_interpreter: /usr/bin/python3
    ansible_ssh_private_key_file: /tmp/certs/ssh_priv.pem
    required_total_memory_mb_zookeeper: 100
    required_total_memory_mb_kafka_broker: 100
    required_total_memory_mb_kafka_connect: 100
    required_total_memory_mb_schema_registry: 100
    required_total_memory_mb_ksql: 100 
    required_total_memory_mb_kafka_rest: 100
    required_total_memory_mb_control_center: 100
    
    # log4j
    zookeeper_custom_log4j: false
    zookeeper_copy_files:
      - source_path: /tmp/zookeeper.log4j.properties
        destination_path: /tmp/custom_log4j.properties
    zookeeper_custom_java_args: -Dlog4j.configuration=file:/tmp/custom_log4j.properties
    kafka_broker_custom_log4j: false
    kafka_broker_copy_files:
      - source_path: /tmp/kafka_broker.log4j.properties
        destination_path: /tmp/custom_log4j.properties
    kafka_broker_custom_java_args: -Dlog4j.configuration=file:/tmp/custom_log4j.properties
    kafka_rest_custom_log4j: false
    kafka_rest_copy_files:
      - source_path: /tmp/kafka_rest.log4j.properties
        destination_path: /tmp/custom_log4j.properties
    kafka_rest_custom_java_args: -Dlog4j.configuration=file:/tmp/custom_log4j.properties
    kafka_connect_custom_log4j: false
    kafka_connect_copy_files:
      - source_path: /tmp/connect.log4j.properties
        destination_path: /tmp/custom_log4j.properties
    kafka_connect_custom_java_args: -Dlog4j.configuration=file:/tmp/custom_log4j.properties
    schema_registry_custom_log4j: false
    schema_registry_copy_files:
      - source_path: /tmp/schema_registry.log4j.properties
        destination_path: /tmp/custom_log4j.properties
    schema_registry_custom_java_args: -Dlog4j.configuration=file:/tmp/custom_log4j.properties
    ksql_custom_log4j: false
    ksql_copy_files:
      - source_path: /tmp/ksql.log4j.properties
        destination_path: /tmp/custom_log4j.properties
    ksql_custom_java_args: -Dlog4j.configuration=file:/tmp/custom_log4j.properties
    control_center_custom_log4j: false
    control_center_copy_files:
      - source_path: /tmp/control_center.log4j.properties
        destination_path: /tmp/custom_log4j.properties
    control_center_custom_java_args: -Dlog4j.configuration=file:/tmp/custom_log4j.properties
    
    ssl_enabled: true
    ssl_mutual_auth_enabled: true
    
    zookeeper_ssl_enabled: true
    zookeeper_ssl_mutal_auth_enabled: true
    zookeeper_quorum_authentication_type: mtls
    zookeeper_client_authentication_type: mtls

    rbac_enabled: true

    mds_super_user: mds
    mds_super_user_password: mds

    kafka_broker_ldap_user: kafka_broker
    kafka_broker_ldap_password: kafka_broker
    schema_registry_ldap_user: schema_registry
    schema_registry_ldap_password: schema_registry
    kafka_connect_ldap_user: connect_worker
    kafka_connect_ldap_password: connect_worker
    ksql_ldap_user: ksql
    ksql_ldap_password: ksql
    kafka_rest_ldap_user: rest_proxy
    kafka_rest_ldap_password: rest_proxy
    control_center_ldap_user: control_center
    control_center_ldap_password: control_center

    # certs
    # https://docs.confluent.io/ansible/current/ansible-encrypt.html#use-custom-keystores-and-truststores-for-tls
    ssl_ca_cert_filepath: /tmp/security/snakeoil-ca-1.crt
    ssl_provided_keystore_and_truststore: true
    ssl_truststore_ca_cert_alias: "CARoot"
    regenerate_keystore_and_truststore: false

    
zookeeper:
  hosts:
    zookeeper1:
      zookeeper_id: 1
      ssl_keystore_filepath: /tmp/security/kafka.zookeeper1.keystore.jks
      ssl_keystore_key_password: confluent
      ssl_keystore_store_password: confluent
      ssl_truststore_filepath: /tmp/security/kafka.zookeeper1.truststore.jks
      ssl_truststore_password: confluent

kafka_broker:
  hosts:
    broker1:
      broker_id: 1
      ssl_keystore_filepath: /tmp/security/kafka.broker1.keystore.jks
      ssl_keystore_key_password: confluent
      ssl_keystore_store_password: confluent
      ssl_truststore_filepath: /tmp/security/kafka.broker1.truststore.jks
      ssl_truststore_password: confluent
    broker2:
      broker_id: 2
      ssl_keystore_filepath: /tmp/security/kafka.broker2.keystore.jks
      ssl_keystore_key_password: confluent
      ssl_keystore_store_password: confluent
      ssl_truststore_filepath: /tmp/security/kafka.broker2.truststore.jks
      ssl_truststore_password: confluent
    broker3:
      broker_id: 3
      ssl_keystore_filepath: /tmp/security/kafka.broker3.keystore.jks
      ssl_keystore_key_password: confluent
      ssl_keystore_store_password: confluent
      ssl_truststore_filepath: /tmp/security/kafka.broker3.truststore.jks
      ssl_truststore_password: confluent
  vars:
    kafka_broker_custom_properties:
      ldap.java.naming.factory.initial: com.sun.jndi.ldap.LdapCtxFactory
      ldap.com.sun.jndi.ldap.read.timeout: 3000
      ldap.java.naming.provider.url: ldaps://openldap:636
      ldap.ssl.truststore.location: /tmp/ldap_certs/ldap_truststore.jks
      ldap.ssl.truststore.password: welcome123
      ldap.java.naming.security.principal: cn=admin,dc=confluentdemo,dc=io
      ldap.java.naming.security.credentials: admin
      ldap.java.naming.security.authentication: simple
      ldap.java.naming.security.protocol: SSL
      ldap.user.search.base: ou=users,dc=confluentdemo,dc=io
      ldap.user.name.attribute: uid
      ldap.user.object.class: inetOrgPerson
      ldap.search.mode: USERS
      ssl.principal.mapping.rules: "RULE:^1.2.840.113549.1.9.1=#1614696e666f40616e6465737363642e636f6d2e636f,CN=(.*?),OU=TEST.*$/$1/,RULE:^CN=(.*?),OU=TEST.*$/$1/,DEFAULT"
      # workaround for ANSIENG-983, need to specify super.users manually
      super.users: User:mds;User:broker1;User:broker2;User:broker3

schema_registry:
  hosts:
    schema-registry:2240:
      ssl_keystore_filepath: /tmp/security/kafka.schema-registry.keystore.jks
      ssl_keystore_key_password: confluent
      ssl_keystore_store_password: confluent
      ssl_truststore_filepath: /tmp/security/kafka.schema-registry.truststore.jks
      ssl_truststore_password: confluent

kafka_rest:
  hosts:
    rest-proxy:
      ssl_keystore_filepath: /tmp/security/kafka.rest-proxy.keystore.jks
      ssl_keystore_key_password: confluent
      ssl_keystore_store_password: confluent
      ssl_truststore_filepath: /tmp/security/kafka.rest-proxy.truststore.jks
      ssl_truststore_password: confluent

ksql:
  hosts:
    ksql-server:
      ssl_keystore_filepath: /tmp/security/kafka.ksql-server.keystore.jks
      ssl_keystore_key_password: confluent
      ssl_keystore_store_password: confluent
      ssl_truststore_filepath: /tmp/security/kafka.ksql-server.truststore.jks
      ssl_truststore_password: confluent

kafka_connect:
  hosts:
    connect:
      ssl_keystore_filepath: /tmp/security/kafka.connect.keystore.jks
      ssl_keystore_key_password: confluent
      ssl_keystore_store_password: confluent
      ssl_truststore_filepath: /tmp/security/kafka.connect.truststore.jks
      ssl_truststore_password: confluent

control_center:
  hosts:
    control-center:
      ssl_keystore_filepath: /tmp/security/kafka.control-center.keystore.jks
      ssl_keystore_key_password: confluent
      ssl_keystore_store_password: confluent
      ssl_truststore_filepath: /tmp/security/kafka.control-center.truststore.jks
      ssl_truststore_password: confluent
  vars:
    # cp-ansible-playground: control-center not working #1880
    # https://github.com/vdesabou/kafka-docker-playground/issues/1880
    control_center_custom_properties:
      confluent.controlcenter.id: 32
